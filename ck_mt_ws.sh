#! /bin/bash

#variable for counting number of binaries
count_no_app=0;
total_no_binaries=0;

> ~/Project/mytool/result/relro/full_relro.txt
> ~/Project/mytool/result/relro/partial_relro.txt
> ~/Project/mytool/result/relro/no_relro.txt
> ~/Project/mytool/result/stackcanaries/stack_canaries.txt
> ~/Project/mytool/result/stackcanaries/no_stack_canaries.txt
> ~/Project/mytool/result/nx/nx.txt
> ~/Project/mytool/result/nx/no_nx.txt
> ~/Project/mytool/result/pie/pie.txt
> ~/Project/mytool/result/pie/no_pie.txt
> ~/Project/mytool/result/fortify_source/fortify_source.txt
> ~/Project/mytool/result/fortify_source/no_fortify_source.txt

fun () {
	. ~/Project/checksec/checksec.sh-master/checksec --file=$1 > /dev/null
	echo "$1"
	echo "$V_RELRO | $V_STACK_CANARY | $V_NX | $V_PIE | $V_FORTIFY | Fortified=$V_FORTIFIED_CNT | Fortifiable=$V_FORTIFIABLE_CNT"
	return
}

#Parse all the files
list_files () {
	#for each file from the provided directory
	for filename in "$1"/*; do
		#check if the file is "directory"
	        if [ -d "$filename" ]; then
			#print number of applications in the folder
			echo -e "There are $count_no_app applications in this folder.\n"
			#initialize count variable
			let count_no_app=0
			#print the folder name
			echo "In $filename folder:"
			#parse recursively
		
		        	list_files "$filename"
			
        	else
			#check if the file is application
			file_type=`file -b --mime-type $filename | sed 's|/.*||'`
			if [ "$file_type" = "application" ]; then
				(( count_no_app++ ));
				#Invoke the key file
				~/Project/mytool/key_checksec.sh $filename
			fi
			total_no_binaries=total_no_binaries+count_no_app
        	fi
    	done
}



#print the directory name from where the search starts
echo "Please enter the directory name:"
#read the directory path name
read DIR_PATH
echo "In $DIR_PATH folder"
#call parser
list_files $DIR_PATH
echo "Total no of binaries: $total_no_binaries"

